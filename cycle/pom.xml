<?xml version="1.0"?>
<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>cycle-root</artifactId>
    <groupId>com.camunda.fox.cycle</groupId>
    <version>6.2.0-SNAPSHOT</version>
  </parent>

  <artifactId>cycle</artifactId>
  <packaging>war</packaging>
  <name>fox cycle - app</name>
  <dependencies>

    <!-- Spring Framework -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
    </dependency>
    

    <!-- CGLIB for various things including @Transactional and spring-data-jpa -->
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
      <version>2.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
      <version>1.7.0</version>
    </dependency>

    <!-- Resteasy (JAX-RS impl) -->
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <version>${version.resteasy}</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson-provider</artifactId>
      <version>${version.resteasy}</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-spring</artifactId>
      <version>${version.resteasy}</version>
    </dependency>

    <!-- apis -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
    </dependency>
    
    <!-- jpa 2.0 api -->
    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.0-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jcl</artifactId>
      <version>1.6.6</version>
    </dependency>

    <!-- Thymeleaf -->
    <dependency>
      <groupId>org.thymeleaf</groupId>
      <artifactId>thymeleaf</artifactId>
      <version>2.0.12</version>
    </dependency>
    <dependency>
      <groupId>org.thymeleaf</groupId>
      <artifactId>thymeleaf-spring3</artifactId>
      <version>2.0.12</version>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.nekohtml</groupId>
      <artifactId>nekohtml</artifactId>
      <version>1.9.16</version>
    </dependency>
    <!-- required for i18n with GNU gettext -->
    <dependency>
      <groupId>org.xnap.commons</groupId>
      <artifactId>gettext-commons</artifactId>
      <version>0.9.6</version>
    </dependency>
    
    <!-- saxon for XSLT transformations (roundtrip) -->
    <dependency>
      <groupId>net.sourceforge.saxon</groupId>
      <artifactId>saxon</artifactId>
      <version>${version.saxon}</version>
    </dependency>
    
    <!-- commons vfs for fs connector -->
    <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-vfs2</artifactId>
        <version>2.0</version>
    </dependency>
    
    <!-- testing -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kubek2k</groupId>
      <artifactId>springockito-annotations</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit-dep</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>1.7.0</version>
    </dependency>
  </dependencies>
  
  <build>
    <finalName>cycle</finalName>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
      <testResource>
        <directory>src/test/javascript</directory>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <id>create-jar</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <classifier>core</classifier>
              <includes>
                <include>**/com/camunda/fox/cycle/**</include>
              </includes>
              <excludes>
                <exclude>**/com/camunda/fox/cycle/web/**</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>js-test</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.searls</groupId>
            <artifactId>jasmine-maven-plugin</artifactId>
            <version>1.2.0.1-SNAPSHOT</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <goals>
                  <goal>test</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <jsSrcDir>${project.basedir}/src/main/webapp/assets/js</jsSrcDir>
              <jsTestSrcDir>${project.basedir}/src/test/javascript</jsTestSrcDir>
              <include>*_spec.js</include>
              <preloadSources>
                <!-- some base lib -->
                <source>lib/jquery-1.7.2.min.js</source>
                <source>lib/bootstrap/bootstrap.js</source>
                <source>lib/angular/angular.js</source>
                <source>lib/angular/angular-resource.js</source>
                <source>lib/angular/angular-mocks.js</source>
              </preloadSources>             
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>tomcat</id>
      <dependencies>
        <!-- database -->
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <version>${version.h2}</version>
        </dependency>
        <!-- javax.persistence -->
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-entitymanager</artifactId>
        </dependency>
        <!-- jpa 2.0 api -->
        <dependency>
          <groupId>org.hibernate.javax.persistence</groupId>
          <artifactId>hibernate-jpa-2.0-api</artifactId>
          <scope>compile</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <!-- required for i18n with GNU gettext -->
            <!-- run 'mvn gettext:gettext gettext:merge gettext:dist' to update 
            po files and generate a updated message bundle class -->
            <groupId>org.xnap.commons</groupId>
            <artifactId>maven-gettext-plugin</artifactId>
            <version>1.2.3</version>
            <configuration>
              <!-- Unix shellscript that runs xgettext and parses views -->
              <xgettextCmd>${basedir}/src/main/po/xgettext.sh</xgettextCmd>
              <!-- directory, into which message catalogs will be generated -->
              <poDirectory>${basedir}/src/main/po</poDirectory>
              <!-- same as AbstractI18n.getMessageBundleName() -->
              <targetBundle>i18n.Messages</targetBundle>
              <!-- directory, into which resource bundles will be generated -->
              <outputDirectory>${basedir}/src/main/resources</outputDirectory>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
            <version>2.0-beta-1</version>
            <executions>
              <execution>
                <id>tomcat-run</id>
                <goals>
                  <goal>exec-war-only</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <path>cycle-spike</path>
                  <serverXml>src/main/tomcat/conf/server.xml</serverXml>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <!-- javax.persistence -->
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-entitymanager</artifactId>
          <scope>test</scope>
        </dependency>
        <!-- jpa 2.0 api -->
        <dependency>
          <groupId>org.hibernate.javax.persistence</groupId>
          <artifactId>hibernate-jpa-2.0-api</artifactId>
          <scope>compile</scope>
        </dependency>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <version>${version.h2}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
